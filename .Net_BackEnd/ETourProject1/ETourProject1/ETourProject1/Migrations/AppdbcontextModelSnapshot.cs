// <auto-generated />
using System;
using ETourProject1.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETourProject1.Migrations
{
    [DbContext(typeof(Appdbcontext))]
    partial class AppdbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ETourProject1.Models.Booking_Header", b =>
                {
                    b.Property<int?>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("BookingId"));

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartureId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfPassengers")
                        .HasColumnType("int");

                    b.Property<int?>("PkgId")
                        .HasColumnType("int");

                    b.Property<int?>("Taxes")
                        .HasColumnType("int");

                    b.Property<int?>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int?>("TourAmount")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("CustId");

                    b.HasIndex("DepartureId");

                    b.HasIndex("PkgId");

                    b.ToTable("BookingHeaders");
                });

            modelBuilder.Entity("ETourProject1.Models.Category_Master", b =>
                {
                    b.Property<int?>("CatMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CatMasterId"));

                    b.Property<string>("CatId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCatId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatMasterId");

                    b.ToTable("CategoryMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Cost_Master", b =>
                {
                    b.Property<int?>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CostId"));

                    b.Property<int?>("ChildWithBed")
                        .HasColumnType("int");

                    b.Property<int?>("ChildWithoutBed")
                        .HasColumnType("int");

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<int?>("ExtraPersonCost")
                        .HasColumnType("int");

                    b.Property<int?>("PkgId")
                        .HasColumnType("int");

                    b.Property<int?>("SinglePersonCost")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("CostId");

                    b.HasIndex("PkgId");

                    b.ToTable("CostMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Customer_Master", b =>
                {
                    b.Property<int?>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CustId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AdharNumber")
                        .HasColumnType("bigint");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CountryCode")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MobileNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustId");

                    b.ToTable("CustomerMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Date_Master", b =>
                {
                    b.Property<int?>("DepartureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DepartureId"));

                    b.Property<DateTime?>("DepartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<int?>("PkgId")
                        .HasColumnType("int");

                    b.HasKey("DepartureId");

                    b.HasIndex("PkgId");

                    b.ToTable("DateMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Itinerary_Master", b =>
                {
                    b.Property<int?>("ItrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ItrId"));

                    b.Property<int?>("DayNo")
                        .HasColumnType("int");

                    b.Property<string>("ItrDtl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PkgId")
                        .HasColumnType("int");

                    b.HasKey("ItrId");

                    b.HasIndex("PkgId");

                    b.ToTable("ItineraryMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Package_Master", b =>
                {
                    b.Property<int?>("PkgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PkgId"));

                    b.Property<int?>("CatMasterId")
                        .HasColumnType("int");

                    b.Property<string>("PkgName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkgId");

                    b.HasIndex("CatMasterId");

                    b.ToTable("PackageMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Passanger_Master", b =>
                {
                    b.Property<int?>("PassangerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PassangerId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustId")
                        .HasColumnType("int");

                    b.Property<int?>("PassangerAmount")
                        .HasColumnType("int");

                    b.Property<string>("PassangerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassangerType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PassangerId");

                    b.HasIndex("CustId");

                    b.ToTable("Passanger");
                });

            modelBuilder.Entity("ETourProject1.Models.Booking_Header", b =>
                {
                    b.HasOne("ETourProject1.Models.Customer_Master", "CustomerMaster")
                        .WithMany("BookingHeaders")
                        .HasForeignKey("CustId");

                    b.HasOne("ETourProject1.Models.Date_Master", "DateMaster")
                        .WithMany("BookingHeaders")
                        .HasForeignKey("DepartureId");

                    b.HasOne("ETourProject1.Models.Package_Master", "PackageMaster")
                        .WithMany("BookingHeaders")
                        .HasForeignKey("PkgId");

                    b.Navigation("CustomerMaster");

                    b.Navigation("DateMaster");

                    b.Navigation("PackageMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Cost_Master", b =>
                {
                    b.HasOne("ETourProject1.Models.Package_Master", "PackageMaster")
                        .WithMany("CostMaster")
                        .HasForeignKey("PkgId");

                    b.Navigation("PackageMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Date_Master", b =>
                {
                    b.HasOne("ETourProject1.Models.Package_Master", "PackageMaster")
                        .WithMany("DateMaster")
                        .HasForeignKey("PkgId");

                    b.Navigation("PackageMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Itinerary_Master", b =>
                {
                    b.HasOne("ETourProject1.Models.Package_Master", "PackageMaster")
                        .WithMany("ItineraryMaster")
                        .HasForeignKey("PkgId");

                    b.Navigation("PackageMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Package_Master", b =>
                {
                    b.HasOne("ETourProject1.Models.Category_Master", "CategoryMaster")
                        .WithMany("PackageMaster")
                        .HasForeignKey("CatMasterId");

                    b.Navigation("CategoryMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Passanger_Master", b =>
                {
                    b.HasOne("ETourProject1.Models.Customer_Master", "CustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustId");

                    b.Navigation("CustomerMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Category_Master", b =>
                {
                    b.Navigation("PackageMaster");
                });

            modelBuilder.Entity("ETourProject1.Models.Customer_Master", b =>
                {
                    b.Navigation("BookingHeaders");
                });

            modelBuilder.Entity("ETourProject1.Models.Date_Master", b =>
                {
                    b.Navigation("BookingHeaders");
                });

            modelBuilder.Entity("ETourProject1.Models.Package_Master", b =>
                {
                    b.Navigation("BookingHeaders");

                    b.Navigation("CostMaster");

                    b.Navigation("DateMaster");

                    b.Navigation("ItineraryMaster");
                });
#pragma warning restore 612, 618
        }
    }
}
